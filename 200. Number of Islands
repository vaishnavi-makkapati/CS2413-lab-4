#include <stdbool.h>

#define MAX 300
bool visited[MAX][MAX];

void dfs(char** grid, int i, int j, int gridSize, int* gridColSize) {
    if (i < 0 || i >= gridSize || j < 0 || j >= gridColSize[i]) return;
    if (grid[i][j] != '1' || visited[i][j]) return;

    visited[i][j] = true;

    dfs(grid, i + 1, j, gridSize, gridColSize);
    dfs(grid, i - 1, j, gridSize, gridColSize);
    dfs(grid, i, j + 1, gridSize, gridColSize);
    dfs(grid, i, j - 1, gridSize, gridColSize);
}

int numIslands(char** grid, int gridSize, int* gridColSize) {
    // Clear visited array for each call
    for (int i = 0; i < gridSize; i++) {
        for (int j = 0; j < gridColSize[i]; j++) {
            visited[i][j] = false;
        }
    }

    int count = 0;

    for (int i = 0; i < gridSize; i++) {
        for (int j = 0; j < gridColSize[i]; j++) {
            if (grid[i][j] == '1' && !visited[i][j]) {
                dfs(grid, i, j, gridSize, gridColSize);
                count++;
            }
        }
    }

    return count;
}
